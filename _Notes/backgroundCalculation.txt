------------------------------------
Support for long-running calculations

1. work items given to BG thread are 100% disconnected from the rest of the app
2. work item is only modified on the BG thread. Ok to leave it in memory as working
    data (don't have to create new one every submission) but only MODIFY it on any other
    thread
3. live data updated only on the main queue

------------------------------------
DESIRED:
--UI responsive always
--UI shows non-invasive spinner while any caclulation is in progress
--Sequencer does not initiate a step until prior calc is done
--Interim results (e.g., partial basins) get displayed if possible
--Any UI control-changes during calc are combined into 1
(User clicks "+" 10 times but only 1 reclc is done)
--anything can ask for any calc to be done anytime

------------------------------------
Design:

Use custom serial DispatchQueue
managed by SKTModel instance
create 'working data' class with clearly defined API to hold a single work item
export from working data to 'live data' struct which is read & used by the rest of the app

workQueue.async {
    // note the 'async'
    // do some work
    DispatchQueue.main.sync {
        // copy from working data to live data
        // node that it's 'sync', not 'async'
    }
}

