==================================================================================

OPTION: first page is menu page
What are the menu items?

A. 1-pair space, geometry TBD
    [phase diagram?]
    [path graph?]

B. 2-pair hemisphere with colors for fitnese
    1. timeseries movie for given dynamic
    2. sweep movie for given model param

C. 2-pair rectangle in (x,y) with height and color for fitness
    1. timeseries movie for given dynamic
    2. sweep movie for given model param

D. Steve's "path graphs" over a 2-pair sweep: stack of rectangles, cells transparent below fitness threshold or away from peak or etc. A model param varies in Z direction
    1. static pic for given threshold & values of other model params
    [sweep movie for 2nd model param?]

E. 3-pair space, geometry TBD, cells transparent below fitness threshold or away from peak or etc.
    1. timeseries movie for a given dynamic
    2. sweep movie for a given model param

================================
New folders aka groups

App
SystemModel
Graphics
UI
Utilities

================================
AppModel really just has set of systems & load/store defaults

SK2E and SK2D are actually different systems: the 2nd one has nodes etc.

Q: I COULD make it so that they're both the same system but that the nodes
are only created and/or used when necessary.
A: BAROQUE!

Q: OR I could always use the nodes and have 2 passes through them w/ each new frame:
1 pass to set the 'value', 2nd one to read and display it.
A: INEFFICIENT!

================================

I don't need physical property type
I can use the name of a physical property
but the name is a class var not an instance var
like classname
but what do I call it? 'type'?

================================
I *do* need color-source idea. Can't just take a physical property
and colorize it in some generic way, b/c of basin membership

Can have basin membership func's as physical properties. But
we want to view them differently.

So the "visualization" is the right abstraction and it comprises both
quantity being shown and way of showing it.

For each quantity I'm going to pick the way of showing it. So the user
chooses a quantity.

================================
There's a unity about this:

protocol AppPart {
    system: PhysicalSystem { get }
    figures: Selector<Figure> { get }
    sequencers: Selector<Sequencer> { get }
}
