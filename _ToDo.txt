==================================================================================
ToDo.txt
==================================================================================

[ ] alpha2 stepper
[ ] sequencers vs. steppers

    settable bounds are only useful in sequencers.
    hard bounds are useful in steppers, and it configuring sequencers
    increment is useful in sequencers and steppers
    default is useful only for reset

[ ] the default values (alpha_min etc) get persisted and restored
    UserDefaults it's not invasive. I can retrofit it

[ ] Recursive Embedded Definition

[ ] can a protocol have derived properties?

[ ] color source for degeneracy(m, n)
    if entropy := log(#states) then degeneracy sequencer is just SKEntropy & LogColorMap

[ ] sequencers that simulate dynamics of a population of points
    steepest descent
    diffusion

[ ] sequencer step() and reset() both update stepSgn at the boundary and both return final stepSgn value

[ ] redo that enum for sequencer behavior at boundary

    MAYBE get rid of BoundType; each sequencer will decide what to do

    "sticky": stepSgn = 0, value set to the boundary
    Q: but what if boundary is open?
    A: open boundaries can't be sticky

    "reflect": stepSgn = -stepSgn, value unchanged (for simplicity, see how it looks)

    "wrap" boundary: stepSgn unchanged

[ ]  basin finder option to do a given # of iterations
    use that do make a sequencer

[ ] put builtin min, max as statics: SKGeometry.N_min etc

[ ] stepper buttons don't track deltas entered into the UI

[ ] move the xxx_step out of physics/geometry into ModelController and Scene

[ ] all the reset / revert mtds return Boolean "changed", so Scene.reset mtds can
    reduce # model change events it fires

[ ] ModelController as the one protocol defining all the things the UI needs to know about.
    It doesn't expose geometry or physics. It's a reswizzling to meet the needs of the UI

[ ] Q: best way to do swift dictionary keyset -> array of values

[ ] All the ViewControllers need to be model change listeners
    And the temp ones need to have the 'scene controller' passed to them on seque
    and thn they remove themselves when they prepare for unwihd


